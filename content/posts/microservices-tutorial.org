#+title: 微服务入门
#+date: 2021-04-23T12:00:00+08:00

* 概述
#+begin_quote
在编程的世界中，最重要的便是抽象能力。微服务改造的过程实际上也是个抽象的过程。
#+end_quote

** 康威定律
康威定律是马尔文·康威1967提出的：“设计系统的架构受制于产生这些设计的组织的沟通结构。”通俗的来讲：产品必然是其（人员）组织沟通结构的缩影。跨部门沟通是非常难的，系统各个模块的接口也反映了它们之间的信息流动和合作方式。

这条定律重点是讲组织架构和沟通对系统设计的影响。组织的沟通和系统的设计之间紧密相连，特别是复杂系统，解决好人与人的沟通才能有一个更好的系统设计。
- 第一定律 组织沟通方式会通过系统设计表达出来。
- 第二定律 时间再多一件事情也不可能做的完美，但总有时间做完一件事情。
- 第三定律 线型系统和线型组织架构间有潜在的异质同态特性。
- 第四定律 大的系统组织总是比小系统更倾向于分解。

** 没有银弹
#+begin_quote
微服务架构整个应用分散成多个服务，定位故障点非常困难。在微服务架构中，一个服务故障可能会产生雪崩效用，导致整个系统故障。
#+end_quote

* 架构设计
** 全栈系统监控
Prometheus
- RedisExporter
- MySQLExporter
- Prometheus和Grafana
*** 全链路跟踪 - 定位问题
 zipkin

*** 分析问题 - 日志分析
Elasticsearch：搜索引擎，同时也是日志的存储。

Logstash：日志采集器，它接收日志输入，对日志进行一些预处理，然后输出到Elasticsearch。

Kibana：UI组件，通过Elasticsearch的API查找数据并展示给用户。

最后还有一个小问题是如何将日志发送到Logstash。一种方案是在日志输出的时候直接调用Logstash接口将日志发送过去。这样一来又（咦，为啥要用“又”）要修改代码……于是小明选用了另一种方案：日志仍然输出到文件，每个服务里再部署个Agent扫描日志文件然后输出给Logstash。

** 服务/资源调度
zuul
** 流量调度

** 状态/数据调度

** 开发和运维自动化
